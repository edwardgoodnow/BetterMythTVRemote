# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := node_lib
DEFS_Debug := \
	'-DNODE_ARCH="x64"' \
	'-DNODE_PLATFORM="linux"' \
	'-DNODE_WANT_INTERNALS=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DNODE_OPENSSL_SYSTEM_CERT_PATH=""' \
	'-DHAVE_INSPECTOR=1' \
	'-D__POSIX__' \
	'-DNODE_USE_V8_PLATFORM=1' \
	'-DNODE_HAVE_I18N_SUPPORT=1' \
	'-DNODE_HAVE_SMALL_ICU=1' \
	'-DHAVE_OPENSSL=1' \
	'-DUCONFIG_NO_SERVICE=1' \
	'-DUCONFIG_NO_REGULAR_EXPRESSIONS=1' \
	'-DU_ENABLE_DYLOAD=0' \
	'-DU_STATIC_IMPLEMENTATION=1' \
	'-DU_HAVE_STD_STRING=0' \
	'-DUCONFIG_NO_BREAK_ITERATION=0' \
	'-DHTTP_PARSER_STRICT=0' \
	'-D_POSIX_C_SOURCE=200112' \
	'-DNGHTTP2_STATICLIB' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-g \
	-O0

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x

INCS_Debug := \
	-I$(srcdir)/src \
	-I$(obj)/gen \
	-I$(obj)/gen/include \
	-I$(srcdir)/deps/v8/include \
	-I$(srcdir)/deps/icu-small/source/i18n \
	-I$(srcdir)/deps/icu-small/source/common \
	-I$(srcdir)/deps/zlib \
	-I$(srcdir)/deps/http_parser \
	-I$(srcdir)/deps/cares/include \
	-I$(srcdir)/deps/uv/include \
	-I$(srcdir)/deps/nghttp2/lib/includes \
	-I$(srcdir)/deps/openssl/openssl/include

DEFS_Release := \
	'-DNODE_ARCH="x64"' \
	'-DNODE_PLATFORM="linux"' \
	'-DNODE_WANT_INTERNALS=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DNODE_OPENSSL_SYSTEM_CERT_PATH=""' \
	'-DHAVE_INSPECTOR=1' \
	'-D__POSIX__' \
	'-DNODE_USE_V8_PLATFORM=1' \
	'-DNODE_HAVE_I18N_SUPPORT=1' \
	'-DNODE_HAVE_SMALL_ICU=1' \
	'-DHAVE_OPENSSL=1' \
	'-DUCONFIG_NO_SERVICE=1' \
	'-DUCONFIG_NO_REGULAR_EXPRESSIONS=1' \
	'-DU_ENABLE_DYLOAD=0' \
	'-DU_STATIC_IMPLEMENTATION=1' \
	'-DU_HAVE_STD_STRING=0' \
	'-DUCONFIG_NO_BREAK_ITERATION=0' \
	'-DHTTP_PARSER_STRICT=0' \
	'-D_POSIX_C_SOURCE=200112' \
	'-DNGHTTP2_STATICLIB'

# Flags passed to all source files.
CFLAGS_Release := \
	-pthread \
	-Wall \
	-Wextra \
	-Wno-unused-parameter \
	-m64 \
	-O3 \
	-fno-omit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=gnu++0x

INCS_Release := \
	-I$(srcdir)/src \
	-I$(obj)/gen \
	-I$(obj)/gen/include \
	-I$(srcdir)/deps/v8/include \
	-I$(srcdir)/deps/icu-small/source/i18n \
	-I$(srcdir)/deps/icu-small/source/common \
	-I$(srcdir)/deps/zlib \
	-I$(srcdir)/deps/http_parser \
	-I$(srcdir)/deps/cares/include \
	-I$(srcdir)/deps/uv/include \
	-I$(srcdir)/deps/nghttp2/lib/includes \
	-I$(srcdir)/deps/openssl/openssl/include

OBJS := \
	$(obj).target/$(TARGET)/src/async_wrap.o \
	$(obj).target/$(TARGET)/src/bootstrapper.o \
	$(obj).target/$(TARGET)/src/cares_wrap.o \
	$(obj).target/$(TARGET)/src/connection_wrap.o \
	$(obj).target/$(TARGET)/src/connect_wrap.o \
	$(obj).target/$(TARGET)/src/env.o \
	$(obj).target/$(TARGET)/src/fs_event_wrap.o \
	$(obj).target/$(TARGET)/src/handle_wrap.o \
	$(obj).target/$(TARGET)/src/js_stream.o \
	$(obj).target/$(TARGET)/src/module_wrap.o \
	$(obj).target/$(TARGET)/src/node.o \
	$(obj).target/$(TARGET)/src/node_api.o \
	$(obj).target/$(TARGET)/src/node_buffer.o \
	$(obj).target/$(TARGET)/src/node_config.o \
	$(obj).target/$(TARGET)/src/node_constants.o \
	$(obj).target/$(TARGET)/src/node_contextify.o \
	$(obj).target/$(TARGET)/src/node_debug_options.o \
	$(obj).target/$(TARGET)/src/node_encoding.o \
	$(obj).target/$(TARGET)/src/node_file.o \
	$(obj).target/$(TARGET)/src/node_http2.o \
	$(obj).target/$(TARGET)/src/node_http_parser.o \
	$(obj).target/$(TARGET)/src/node_os.o \
	$(obj).target/$(TARGET)/src/node_platform.o \
	$(obj).target/$(TARGET)/src/node_perf.o \
	$(obj).target/$(TARGET)/src/node_postmortem_metadata.o \
	$(obj).target/$(TARGET)/src/node_process.o \
	$(obj).target/$(TARGET)/src/node_serdes.o \
	$(obj).target/$(TARGET)/src/node_trace_events.o \
	$(obj).target/$(TARGET)/src/node_url.o \
	$(obj).target/$(TARGET)/src/node_util.o \
	$(obj).target/$(TARGET)/src/node_v8.o \
	$(obj).target/$(TARGET)/src/node_stat_watcher.o \
	$(obj).target/$(TARGET)/src/node_watchdog.o \
	$(obj).target/$(TARGET)/src/node_zlib.o \
	$(obj).target/$(TARGET)/src/node_i18n.o \
	$(obj).target/$(TARGET)/src/pipe_wrap.o \
	$(obj).target/$(TARGET)/src/process_wrap.o \
	$(obj).target/$(TARGET)/src/signal_wrap.o \
	$(obj).target/$(TARGET)/src/spawn_sync.o \
	$(obj).target/$(TARGET)/src/string_bytes.o \
	$(obj).target/$(TARGET)/src/string_search.o \
	$(obj).target/$(TARGET)/src/stream_base.o \
	$(obj).target/$(TARGET)/src/stream_wrap.o \
	$(obj).target/$(TARGET)/src/tcp_wrap.o \
	$(obj).target/$(TARGET)/src/timer_wrap.o \
	$(obj).target/$(TARGET)/src/tracing/agent.o \
	$(obj).target/$(TARGET)/src/tracing/node_trace_buffer.o \
	$(obj).target/$(TARGET)/src/tracing/node_trace_writer.o \
	$(obj).target/$(TARGET)/src/tracing/trace_event.o \
	$(obj).target/$(TARGET)/src/tty_wrap.o \
	$(obj).target/$(TARGET)/src/udp_wrap.o \
	$(obj).target/$(TARGET)/src/util.o \
	$(obj).target/$(TARGET)/src/uv.o \
	$(obj).target/$(TARGET)/gen/node_javascript.o \
	$(obj).target/$(TARGET)/src/inspector_agent.o \
	$(obj).target/$(TARGET)/src/inspector_io.o \
	$(obj).target/$(TARGET)/src/inspector_js_api.o \
	$(obj).target/$(TARGET)/src/inspector_socket.o \
	$(obj).target/$(TARGET)/src/inspector_socket_server.o \
	$(obj).target/$(TARGET)/src/backtrace_posix.o \
	$(obj).target/$(TARGET)/src/node_crypto.o \
	$(obj).target/$(TARGET)/src/node_crypto_bio.o \
	$(obj).target/$(TARGET)/src/node_crypto_clienthello.o \
	$(obj).target/$(TARGET)/src/tls_wrap.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).host/node_js2c.stamp $(obj).host/v8_inspector_compress_protocol_json.stamp $(obj).target/deps/v8/src/v8.stamp $(obj).target/tools/icu/icuuc.stamp $(obj).target/deps/v8/src/postmortem-metadata.stamp $(builddir)/openssl-cli

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-rdynamic \
	-m64

LDFLAGS_Release := \
	-pthread \
	-rdynamic \
	-m64

LIBS :=

$(obj).target/libnode.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/libnode.a: LIBS := $(LIBS)
$(obj).target/libnode.a: TOOLSET := $(TOOLSET)
$(obj).target/libnode.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink_thin)

all_deps += $(obj).target/libnode.a
# Add target alias
.PHONY: node_lib
node_lib: $(obj).target/libnode.a

# Add target alias to "all" target.
.PHONY: all
all: node_lib

